// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: getChirpByChirpIDAndUser.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getChirpByChirpIDAndUserID = `-- name: GetChirpByChirpIDAndUserID :one
SELECT id, created_at, updated_at, body, user_id
FROM chirps
WHERE id = $1
AND user_id = $2
`

type GetChirpByChirpIDAndUserIDParams struct {
	ID     uuid.UUID `json:"id"`
	UserID uuid.UUID `json:"user_id"`
}

func (q *Queries) GetChirpByChirpIDAndUserID(ctx context.Context, arg GetChirpByChirpIDAndUserIDParams) (Chirp, error) {
	row := q.db.QueryRowContext(ctx, getChirpByChirpIDAndUserID, arg.ID, arg.UserID)
	var i Chirp
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Body,
		&i.UserID,
	)
	return i, err
}
