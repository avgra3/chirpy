// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: postUpdateUserEmailPassword.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const updateUserEmailPassword = `-- name: UpdateUserEmailPassword :one
UPDATE users
SET email = $1,
hashed_password = $2,
updated_at = NOW()
WHERE id = $3
RETURNING id, created_at, updated_at, email
`

type UpdateUserEmailPasswordParams struct {
	Email          string    `json:"email"`
	HashedPassword string    `json:"hashed_password"`
	ID             uuid.UUID `json:"id"`
}

type UpdateUserEmailPasswordRow struct {
	ID        uuid.UUID `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Email     string    `json:"email"`
}

func (q *Queries) UpdateUserEmailPassword(ctx context.Context, arg UpdateUserEmailPasswordParams) (UpdateUserEmailPasswordRow, error) {
	row := q.db.QueryRowContext(ctx, updateUserEmailPassword, arg.Email, arg.HashedPassword, arg.ID)
	var i UpdateUserEmailPasswordRow
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
	)
	return i, err
}
