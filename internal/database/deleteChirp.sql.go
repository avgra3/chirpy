// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: deleteChirp.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const deleteChirp = `-- name: DeleteChirp :one
WITH deleted AS (
DELETE FROM chirps
WHERE id = $1
AND user_id = $2
RETURNING id, created_at, updated_at, body, user_id)
SELECT COUNT(*) FROM deleted
`

type DeleteChirpParams struct {
	ID     uuid.UUID `json:"id"`
	UserID uuid.UUID `json:"user_id"`
}

func (q *Queries) DeleteChirp(ctx context.Context, arg DeleteChirpParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, deleteChirp, arg.ID, arg.UserID)
	var count int64
	err := row.Scan(&count)
	return count, err
}
