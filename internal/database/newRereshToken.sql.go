// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: newRereshToken.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const newRereshToken = `-- name: NewRereshToken :one
INSERT INTO refresh_tokens (token, created_at, updated_at, user_id, expires_at, revoked_at)
VALUES
($1, NOW(), NOW(), $2, (NOW() + interval '60' day), NULL)
RETURNING token, created_at, updated_at, user_id, expires_at, revoked_at
`

type NewRereshTokenParams struct {
	Token  string    `json:"token"`
	UserID uuid.UUID `json:"user_id"`
}

func (q *Queries) NewRereshToken(ctx context.Context, arg NewRereshTokenParams) (RefreshToken, error) {
	row := q.db.QueryRowContext(ctx, newRereshToken, arg.Token, arg.UserID)
	var i RefreshToken
	err := row.Scan(
		&i.Token,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
		&i.ExpiresAt,
		&i.RevokedAt,
	)
	return i, err
}
